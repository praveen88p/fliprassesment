Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of
a different word or phrase, typically using all the original letters exactly once.

  bool isAnagram(string s, string t) {
        if(s.size() != t.size())return 0;

        vector<int>arr(26,0);

        for(int i = 0 ;i<s.size(); i++){
            arr[s[i] - 'a']++;
            arr[t[i] - 'a']--;
        }
        for(int i = 0; i < arr.size(); i++ ){
            if(arr[i] != 0) return false;
        }
        return true;
    }


---------------------------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>

  bool isAnagram(std::string s, std::string t) {
        if (s.size() != t.size()) return false;

        std::unordered_map<char, int> map1;
        std::unordered_map<char, int> map2;

        for (int i = 0; i < s.size(); ++i) {
            map1[s[i]]++;
            map2[t[i]]++;
        }

        return map1 == map2;
    }
